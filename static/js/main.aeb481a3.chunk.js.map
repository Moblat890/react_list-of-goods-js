{"version":3,"sources":["Components/GoodsList.jsx","App.jsx","index.jsx"],"names":["GoodsList","goods","map","good","goodsFromServer","SORT_FIELD_ALPHABET","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","isReversed","setIsReversed","visibleGoods","isSorted","prepeareGoods","sort","good1","good2","localeCompare","length","reverse","getActionsGoods","className","type","cn","onClick","ReactDOM","render","document","getElementById"],"mappings":"iPAAaA,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvB,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,SCIjBC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,WACtBC,EAAoB,SA2BnB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA5BR,SAAyBZ,EAAOa,EAAUH,GACxC,IAAMI,EAAa,YAAOd,GAqB1B,OAnBIa,GACFC,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQJ,GACN,KAAKT,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXT,GACFI,EAAcM,UAGTN,EAMcO,CAAgBlB,EAAiBK,EAAWE,GAEjE,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYhB,IAAcJ,IAE9BqB,QAAS,WACPhB,EAAaL,IAPjB,iCAaA,wBACEmB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYhB,IAAcH,IAE9BoB,QAAS,WACPhB,EAAaJ,IAPjB,4BAaA,wBACEkB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAad,IAEjBe,QAAS,WACPd,GAAeD,IAPnB,sBAaEF,GAAaE,IAEf,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPd,GAAc,GACdF,EAAa,KALjB,sBAaF,cAAC,EAAD,CAAWT,MAAOY,QC3GxBc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.aeb481a3.chunk.js","sourcesContent":["export const GoodsList = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li data-cy=\"Good\" key={good}>\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import { useState } from 'react';\nimport cn from 'classnames';\n\nimport './App.scss';\nimport 'bulma/css/bulma.css';\nimport { GoodsList } from './Components/GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABET = 'alphabet';\nconst SORT_FIELD_LENGTH = 'length';\n\nfunction getActionsGoods(goods, isSorted, isReversed) {\n  const prepeareGoods = [...goods];\n\n  if (isSorted) {\n    prepeareGoods.sort((good1, good2) => {\n      switch (isSorted) {\n        case SORT_FIELD_ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    prepeareGoods.reverse();\n  }\n\n  return prepeareGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleGoods = getActionsGoods(goodsFromServer, sortField, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-info',\n            { 'is-light': sortField !== SORT_FIELD_ALPHABET },\n          )}\n          onClick={() => {\n            setSortField(SORT_FIELD_ALPHABET);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-success',\n            { 'is-light': sortField !== SORT_FIELD_LENGTH },\n          )}\n          onClick={() => {\n            setSortField(SORT_FIELD_LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => {\n            setIsReversed(!isReversed);\n          }}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReversed)\n        && (\n        <button\n          type=\"button\"\n          className=\"button is-danger is-light\"\n          onClick={() => {\n            setIsReversed(false);\n            setSortField('');\n          }}\n        >\n          Reset\n        </button>\n        )}\n      </div>\n\n      <GoodsList goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}